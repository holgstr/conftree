% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/r2p_hte.R
\name{r2p_hte}
\alias{r2p_hte}
\title{Finding Subgroups in Treatment Effects with Conformal Trees}
\usage{
r2p_hte(
  data,
  target,
  treatment,
  learner,
  cv_folds = 1,
  alpha = 0.1,
  gamma = 0.01,
  lambda = 0.5,
  max_groups = 5
)
}
\arguments{
\item{data}{(\code{data.frame})\cr data set for model training and uncertainty estimation.}

\item{target}{(\code{string})\cr name of the target variable. The target must be a numeric variable.}

\item{treatment}{(\code{string})\cr name of the treatment variable. If \code{treatment}\cr is a factor,
then the first level is treated as control and the second level as treatment indicator. If \code{treatment}\cr is a numeric, then
zero-one encoding is assumed and \code{"1"}\cr treated as treatment indicator.}

\item{learner}{(\code{model_spec})\cr the learner for training the prediction model.
See \code{\link[parsnip:model_spec]{parsnip::model_spec()}} for details.}

\item{cv_folds}{(\code{count})\cr number of CV+ folds.}

\item{alpha}{(\code{proportion})\cr miscoverage rate.}

\item{gamma}{(\code{proportion})\cr regularization parameter ensuring that reduction
in the impurity of the confident homogeneity is sufficiently large.}

\item{lambda}{(\code{proportion})\cr balance parameter, quantifying the impact of the average interval length relative
to the average absolute deviation (i.e. interval width vs. average absolute deviation)}

\item{max_groups}{(\code{count})\cr maximum number of subgroups.}
}
\value{
The tree.
}
\description{
Finding Subgroups in Treatment Effects with Conformal Trees
}
\examples{
library(tidymodels)
# Synthetic example data:
library(htesim)
set.seed(12)
dgp <- dgp(p = pF_exp_x1_x2,
          m = mF_x1,
          t = tF_div_x1_x2,
          model = "normal",
          xmodel = "unif",
          sd = 1)
sim <- simulate(object = dgp,
               nsim = 500L,
               d = 4L)
# Initialize learner:
linear <- linear_reg() \%>\%
 set_mode("regression") \%>\%
 set_engine("lm")
# Detect subgroups:
groups <- r2p_hte(
  data = sim,
  target = "y",
  treatment = "trt",
  learner = linear,
  cv_folds = 500,
  alpha = 0.1,
  gamma = 0.01,
  lambda = 0.5,
  max_groups = 8
)
summary(groups)
}
