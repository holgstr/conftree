[{"path":"https://holgstr.github.io/conftree/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 r2p authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://holgstr.github.io/conftree/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Holger Löwe. Author, maintainer.","code":""},{"path":"https://holgstr.github.io/conftree/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Löwe H (2024). conftree: Regression Trees Conformal Prediction. R package version 0.0.0.9000, https://holgstr.github.io/conftree/.","code":"@Manual{,   title = {conftree: Regression Trees With Conformal Prediction},   author = {Holger Löwe},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://holgstr.github.io/conftree/}, }"},{"path":"https://holgstr.github.io/conftree/index.html","id":"conftree-subgroups-with-trees-using-conformal-prediction","dir":"","previous_headings":"","what":"Regression Trees With Conformal Prediction","title":"Regression Trees With Conformal Prediction","text":"R package detects homogeneous subgroups machine learning models numeric outcomes (regression). leverages CV+/Jackknife+ simultaneously optimize inter-group heterogeneity intra-group homogeneity. way, extension r2p algorithm (Lee et. al, NeurIPS 2020). conftree works 100+ learning algorithms regression tasks available tidymodels.","code":""},{"path":"https://holgstr.github.io/conftree/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Regression Trees With Conformal Prediction","text":"can install current development version GitHub :","code":"if (!require(\"remotes\")) {   install.packages(\"remotes\") } remotes::install_github(\"holgstr/conftree\")"},{"path":"https://holgstr.github.io/conftree/index.html","id":"quickstart","dir":"","previous_headings":"","what":"Quickstart","title":"Regression Trees With Conformal Prediction","text":"Let’s find subgroups Washington bike share data. use tidymodels set random forest learner, 5% miscoverage rate alpha, 10-fold CV+ quantify uncertainty resulting subgroups:","code":"library(conftree) library(tidymodels) data(bikes)  set.seed(1234)  # Specify the learner to be used for model training: randforest <- rand_forest(trees = 200, min_n = 5) %>%   set_mode(\"regression\") %>%   set_engine(\"ranger\")  # Find optimal subgroups: groups <- r2p(   data = bikes,   target = \"count\",   learner = randforest,   cv_folds = 10,   alpha = 0.05,   gamma = 0.2,   lambda = 0.5 )  # Display tree structure: groups$tree #> [1] root #> |   [2] weekday in Sun: * #> |   [3] weekday in Mon, Tue, Wed, Thu, Fri, Sat #> |   |   [4] weekday in Sat: * #> |   |   [5] weekday in Sun, Mon, Tue, Wed, Thu, Fri #> |   |   |   [6] temp <= 6.15: * #> |   |   |   [7] temp > 6.15 #> |   |   |   |   [8] temp <= 28.29 #> |   |   |   |   |   [9] month <= 2.5: * #> |   |   |   |   |   [10] month > 2.5: * #> |   |   |   |   [11] temp > 28.29: *"},{"path":"https://holgstr.github.io/conftree/reference/avg_dev.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to compute the mean absolute deviation of a validation set — avg_dev","title":"Helper to compute the mean absolute deviation of a validation set — avg_dev","text":"Helper compute mean absolute deviation validation set","code":""},{"path":"https://holgstr.github.io/conftree/reference/avg_dev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to compute the mean absolute deviation of a validation set — avg_dev","text":"","code":"avg_dev(valid_set, alpha)"},{"path":"https://holgstr.github.io/conftree/reference/avg_dev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to compute the mean absolute deviation of a validation set — avg_dev","text":"valid_set (data.frame) validation set. See get_valid_set() details. alpha (proportion) miscoverage rate.","code":""},{"path":"https://holgstr.github.io/conftree/reference/avg_dev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper to compute the mean absolute deviation of a validation set — avg_dev","text":"average absolute deviation.","code":""},{"path":"https://holgstr.github.io/conftree/reference/avg_width.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to compute the mean conformal interval length of a validation set — avg_width","title":"Helper to compute the mean conformal interval length of a validation set — avg_width","text":"Helper compute mean conformal interval length validation set","code":""},{"path":"https://holgstr.github.io/conftree/reference/avg_width.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to compute the mean conformal interval length of a validation set — avg_width","text":"","code":"avg_width(valid_set, alpha)"},{"path":"https://holgstr.github.io/conftree/reference/avg_width.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to compute the mean conformal interval length of a validation set — avg_width","text":"valid_set (data.frame) validation set. See get_valid_set() details. alpha (proportion) miscoverage rate.","code":""},{"path":"https://holgstr.github.io/conftree/reference/avg_width.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper to compute the mean conformal interval length of a validation set — avg_width","text":"average conformal interval length.","code":""},{"path":"https://holgstr.github.io/conftree/reference/bikes.html","id":null,"dir":"Reference","previous_headings":"","what":"Regression data of the usage of rental bikes in Washington D.C., USA — bikes","title":"Regression data of the usage of rental bikes in Washington D.C., USA — bikes","text":"data set contains information hourly bike sharing usage Washington, D.C. years 2011-2012. target variable count, total number bikes lent users specific time.","code":""},{"path":"https://holgstr.github.io/conftree/reference/bikes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Regression data of the usage of rental bikes in Washington D.C., USA — bikes","text":"","code":"data(bikes)"},{"path":"https://holgstr.github.io/conftree/reference/bikes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Regression data of the usage of rental bikes in Washington D.C., USA — bikes","text":"object class data.frame 727 rows 11 columns.","code":""},{"path":"https://holgstr.github.io/conftree/reference/bikes.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Regression data of the usage of rental bikes in Washington D.C., USA — bikes","text":"subset original data, can found OpenML database (ID = 42712).","code":""},{"path":"https://holgstr.github.io/conftree/reference/bikes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Regression data of the usage of rental bikes in Washington D.C., USA — bikes","text":"data frame contains following columns: season Season year year Year; 0=2011, 1=2012 month Month year holiday day public holiday (y/n) weekday Day week workingday day aworking day (y/n) weather Weather situation temp Temperature degrees celsius humidity Humidity (relative) windspeed Windspeed miles per hour count Total number bikes lent users","code":""},{"path":"https://holgstr.github.io/conftree/reference/bikes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Regression data of the usage of rental bikes in Washington D.C., USA — bikes","text":"Fanaee-T, Hadi, Gama, Joao, \"Event labeling combining ensemble detectors background knowledge\", Progress Artificial Intelligence (2013): pp. 1-15, Springer Berlin Heidelberg, doi:10.1007/s13748-013-0040-3. Vanschoren, Joaquin, et al. \"OpenML: networked science machine learning.\" ACM SIGKDD Explorations Newsletter 15.2 (2014): 49-60.","code":""},{"path":"https://holgstr.github.io/conftree/reference/conf_homo.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to compute confident homogeneity — conf_homo","title":"Helper to compute confident homogeneity — conf_homo","text":"Helper compute confident homogeneity","code":""},{"path":"https://holgstr.github.io/conftree/reference/conf_homo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to compute confident homogeneity — conf_homo","text":"","code":"conf_homo(width, deviation, lambda)"},{"path":"https://holgstr.github.io/conftree/reference/conf_homo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to compute confident homogeneity — conf_homo","text":"width (number) total conformal interval length split. deviation (number) total absolute deviation split. lambda (proportion) balance width deviation.","code":""},{"path":"https://holgstr.github.io/conftree/reference/conf_homo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper to compute confident homogeneity — conf_homo","text":"value confident homogeneity.","code":""},{"path":"https://holgstr.github.io/conftree/reference/conf_quantile.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to compute the conformal alpha-quantile for a vector of residuals — conf_quantile","title":"Helper to compute the conformal alpha-quantile for a vector of residuals — conf_quantile","text":"Helper compute conformal alpha-quantile vector residuals","code":""},{"path":"https://holgstr.github.io/conftree/reference/conf_quantile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to compute the conformal alpha-quantile for a vector of residuals — conf_quantile","text":"","code":"conf_quantile(residuals, alpha)"},{"path":"https://holgstr.github.io/conftree/reference/conf_quantile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to compute the conformal alpha-quantile for a vector of residuals — conf_quantile","text":"residuals (numeric) residuals predictions validation set. alpha (proportion) miscoverage rate.","code":""},{"path":"https://holgstr.github.io/conftree/reference/conf_quantile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper to compute the conformal alpha-quantile for a vector of residuals — conf_quantile","text":"conformal alpha-quantile.","code":""},{"path":"https://holgstr.github.io/conftree/reference/conftree-package.html","id":null,"dir":"Reference","previous_headings":"","what":"conftree Package — conftree-package","title":"conftree Package — conftree-package","text":"conftree detects subgroups via recursive partitioning based confident conformal homogeneity.","code":""},{"path":[]},{"path":"https://holgstr.github.io/conftree/reference/conftree-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"conftree Package — conftree-package","text":"Maintainer: Holger Löwe hbj.loewe@gmail.com","code":""},{"path":"https://holgstr.github.io/conftree/reference/crit_node.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to compute the confident homogeneity in a node. — crit_node","title":"Helper to compute the confident homogeneity in a node. — crit_node","text":"Helper compute confident homogeneity node.","code":""},{"path":"https://holgstr.github.io/conftree/reference/crit_node.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to compute the confident homogeneity in a node. — crit_node","text":"","code":"crit_node(valid_set, alpha, lambda)"},{"path":"https://holgstr.github.io/conftree/reference/crit_node.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to compute the confident homogeneity in a node. — crit_node","text":"valid_set (data.frame) validation set. See get_valid_set() details. alpha (proportion) miscoverage rate. lambda (proportion) balance width deviation.","code":""},{"path":"https://holgstr.github.io/conftree/reference/crit_node.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper to compute the confident homogeneity in a node. — crit_node","text":"confident homogeneity node.","code":""},{"path":"https://holgstr.github.io/conftree/reference/eval_split_cand.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to assess if a split is sensible — eval_split_cand","title":"Helper to assess if a split is sensible — eval_split_cand","text":"checks child nodes contain enough observations result sensible quantile values. prevent alpha-quantile becomes \\(\\infty\\) \\((1 - \\alpha)(n + 1) > n\\).","code":""},{"path":"https://holgstr.github.io/conftree/reference/eval_split_cand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to assess if a split is sensible — eval_split_cand","text":"","code":"eval_split_cand(ids_left, valid_set, alpha)"},{"path":"https://holgstr.github.io/conftree/reference/eval_split_cand.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to assess if a split is sensible — eval_split_cand","text":"ids_left (integer) ids left child node. valid_set (data.frame) validation set. See get_valid_set() details. alpha (proportion) miscoverage rate.","code":""},{"path":"https://holgstr.github.io/conftree/reference/eval_split_cand.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper to assess if a split is sensible — eval_split_cand","text":"Logical value indicating child nodes contain enough observations.","code":""},{"path":"https://holgstr.github.io/conftree/reference/eval_split_cand_categorical.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to assess if a categorical split is sensible — eval_split_cand_categorical","title":"Helper to assess if a categorical split is sensible — eval_split_cand_categorical","text":"checks child nodes contain enough observations result sensible quantile values. prevent alpha-quantile becomes \\(\\infty\\) \\((1 - \\alpha)(n + 1) > n\\).","code":""},{"path":"https://holgstr.github.io/conftree/reference/eval_split_cand_categorical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to assess if a categorical split is sensible — eval_split_cand_categorical","text":"","code":"eval_split_cand_categorical(split_cand, covariate, valid_set, alpha)"},{"path":"https://holgstr.github.io/conftree/reference/eval_split_cand_categorical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to assess if a categorical split is sensible — eval_split_cand_categorical","text":"split_cand (character) split point, set categories representing left child node. covariate (factor) covariate values observations parent node. valid_set (data.frame) validation set. See get_valid_set() details. alpha (proportion) miscoverage rate.","code":""},{"path":"https://holgstr.github.io/conftree/reference/eval_split_cand_categorical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper to assess if a categorical split is sensible — eval_split_cand_categorical","text":"Logical value indicating child nodes contain enough observations.","code":""},{"path":"https://holgstr.github.io/conftree/reference/eval_split_cand_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to assess if a numeric split is sensible — eval_split_cand_numeric","title":"Helper to assess if a numeric split is sensible — eval_split_cand_numeric","text":"checks child nodes contain enough observations result sensible quantile values. prevent alpha-quantile becomes \\(\\infty\\) \\((1 - \\alpha)(n + 1) > n\\).","code":""},{"path":"https://holgstr.github.io/conftree/reference/eval_split_cand_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to assess if a numeric split is sensible — eval_split_cand_numeric","text":"","code":"eval_split_cand_numeric(split_cand, covariate, valid_set, alpha)"},{"path":"https://holgstr.github.io/conftree/reference/eval_split_cand_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to assess if a numeric split is sensible — eval_split_cand_numeric","text":"split_cand (number) value split point. covariate (numeric) covariate values observations parent node. valid_set (data.frame) validation set. See get_valid_set() details. alpha (proportion) miscoverage rate.","code":""},{"path":"https://holgstr.github.io/conftree/reference/eval_split_cand_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper to assess if a numeric split is sensible — eval_split_cand_numeric","text":"Logical value indicating child nodes contain enough observations.","code":""},{"path":"https://holgstr.github.io/conftree/reference/get_candidates.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to get candidates for the next split of a tree — get_candidates","title":"Helper to get candidates for the next split of a tree — get_candidates","text":"Helper get candidates next split tree","code":""},{"path":"https://holgstr.github.io/conftree/reference/get_candidates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to get candidates for the next split of a tree — get_candidates","text":"","code":"get_candidates(tree, x_data, valid_set, alpha, gamma, lambda)"},{"path":"https://holgstr.github.io/conftree/reference/get_candidates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to get candidates for the next split of a tree — get_candidates","text":"tree (party) tree object. See partykit::party() details. x_data (data.frame) feature data matrix. valid_set (data.frame) validation set. See get_valid_set() details. alpha (proportion) miscoverage rate. gamma (proportion) regularization parameter ensuring reduction impurity confident homogeneity sufficiently large. lambda (proportion) balance width deviation.","code":""},{"path":"https://holgstr.github.io/conftree/reference/get_candidates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper to get candidates for the next split of a tree — get_candidates","text":"List sensible splits tree's terminal nodes.","code":""},{"path":"https://holgstr.github.io/conftree/reference/get_pred_mean.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to compute the mean prediction of the validation set — get_pred_mean","title":"Helper to compute the mean prediction of the validation set — get_pred_mean","text":"Helper compute mean prediction validation set","code":""},{"path":"https://holgstr.github.io/conftree/reference/get_pred_mean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to compute the mean prediction of the validation set — get_pred_mean","text":"","code":"get_pred_mean(valid_set)"},{"path":"https://holgstr.github.io/conftree/reference/get_pred_mean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to compute the mean prediction of the validation set — get_pred_mean","text":"valid_set (data.frame) validation set. See get_valid_set() details.","code":""},{"path":"https://holgstr.github.io/conftree/reference/get_pred_mean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper to compute the mean prediction of the validation set — get_pred_mean","text":"mean predicted target variable.","code":""},{"path":"https://holgstr.github.io/conftree/reference/get_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to get the next split of a tree — get_split","title":"Helper to get the next split of a tree — get_split","text":"Helper get next split tree","code":""},{"path":"https://holgstr.github.io/conftree/reference/get_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to get the next split of a tree — get_split","text":"","code":"get_split(candidates, x_data)"},{"path":"https://holgstr.github.io/conftree/reference/get_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to get the next split of a tree — get_split","text":"candidates (list) sensible splits tree's terminal nodes. See get_candidates() details. x_data (data.frame) feature data matrix.","code":""},{"path":"https://holgstr.github.io/conftree/reference/get_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper to get the next split of a tree — get_split","text":"List specifying next split","code":""},{"path":"https://holgstr.github.io/conftree/reference/get_valid_set.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to retrieve validation set and predictions — get_valid_set","title":"Helper to retrieve validation set and predictions — get_valid_set","text":"Helper retrieve validation set predictions","code":""},{"path":"https://holgstr.github.io/conftree/reference/get_valid_set.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to retrieve validation set and predictions — get_valid_set","text":"","code":"get_valid_set(data, target, learner, cv_folds)"},{"path":"https://holgstr.github.io/conftree/reference/get_valid_set.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to retrieve validation set and predictions — get_valid_set","text":"data (data.frame). target (string) name target variable. learner (model_spec object) learner training prediction model. See parsnip::model_spec() details. cv_folds (count) number CV+ folds.","code":""},{"path":"https://holgstr.github.io/conftree/reference/get_valid_set.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper to retrieve validation set and predictions — get_valid_set","text":"Data frame predictions indices.","code":""},{"path":"https://holgstr.github.io/conftree/reference/grow_node.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to grow the tree by splitting a terminal node — grow_node","title":"Helper to grow the tree by splitting a terminal node — grow_node","text":"Helper grow tree splitting terminal node","code":""},{"path":"https://holgstr.github.io/conftree/reference/grow_node.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to grow the tree by splitting a terminal node — grow_node","text":"","code":"grow_node(node, split, x_data)"},{"path":"https://holgstr.github.io/conftree/reference/grow_node.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to grow the tree by splitting a terminal node — grow_node","text":"node (partynode) current tree structure. See partykit::partynode() details. split (list) next split. See get_split() details. x_data (data.frame) feature data matrix.","code":""},{"path":"https://holgstr.github.io/conftree/reference/grow_node.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper to grow the tree by splitting a terminal node — grow_node","text":"updated tree structure.","code":""},{"path":"https://holgstr.github.io/conftree/reference/plot.conftree.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot a conftree — plot.conftree","title":"Plot a conftree — plot.conftree","text":"Plot conftree","code":""},{"path":"https://holgstr.github.io/conftree/reference/plot.conftree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot a conftree — plot.conftree","text":"","code":"# S3 method for conftree plot(x, ...)"},{"path":"https://holgstr.github.io/conftree/reference/plot.conftree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot a conftree — plot.conftree","text":"x (conftree) tree containing detected subgroups. ... additional arguments.","code":""},{"path":"https://holgstr.github.io/conftree/reference/plot.conftree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot a conftree — plot.conftree","text":"plot.","code":""},{"path":"https://holgstr.github.io/conftree/reference/process_covariate.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to find all sensible splits in a covariate — process_covariate","title":"Helper to find all sensible splits in a covariate — process_covariate","text":"Helper find sensible splits covariate","code":""},{"path":"https://holgstr.github.io/conftree/reference/process_covariate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to find all sensible splits in a covariate — process_covariate","text":"","code":"process_covariate(   var_name,   x_data,   node_id,   valid_set,   crit_node,   alpha,   gamma,   lambda )"},{"path":"https://holgstr.github.io/conftree/reference/process_covariate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to find all sensible splits in a covariate — process_covariate","text":"var_name (string) name feature split. x_data (data.frame) feature data matrix. node_id (count) parent node identifier. valid_set (data.frame) validation set. See get_valid_set() details. crit_node (number) confident homogeneity parent node. alpha (proportion) miscoverage rate. gamma (proportion) regularization parameter ensuring reduction impurity confident homogeneity sufficiently large. lambda (proportion) balance width deviation.","code":""},{"path":"https://holgstr.github.io/conftree/reference/process_covariate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper to find all sensible splits in a covariate — process_covariate","text":"List sensible splits covariate.","code":""},{"path":"https://holgstr.github.io/conftree/reference/process_node.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to find all sensible splits in a parent node — process_node","title":"Helper to find all sensible splits in a parent node — process_node","text":"Helper find sensible splits parent node","code":""},{"path":"https://holgstr.github.io/conftree/reference/process_node.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to find all sensible splits in a parent node — process_node","text":"","code":"process_node(x_data, node_id, valid_set, alpha, gamma, lambda)"},{"path":"https://holgstr.github.io/conftree/reference/process_node.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to find all sensible splits in a parent node — process_node","text":"x_data (data.frame) feature data matrix. node_id (count) parent node identifier. valid_set (data.frame) validation set. See get_valid_set() details. alpha (proportion) miscoverage rate. gamma (proportion) regularization parameter ensuring reduction impurity confident homogeneity sufficiently large. lambda (proportion) balance width deviation.","code":""},{"path":"https://holgstr.github.io/conftree/reference/process_node.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper to find all sensible splits in a parent node — process_node","text":"List sensible splits parent node.","code":""},{"path":"https://holgstr.github.io/conftree/reference/process_split_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to compute the gain in confident homogeneity of a split — process_split_config","title":"Helper to compute the gain in confident homogeneity of a split — process_split_config","text":"Helper compute gain confident homogeneity split","code":""},{"path":"https://holgstr.github.io/conftree/reference/process_split_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to compute the gain in confident homogeneity of a split — process_split_config","text":"","code":"process_split_config(   ids_left,   ids_right,   valid_set,   crit_node,   alpha,   gamma,   lambda )"},{"path":"https://holgstr.github.io/conftree/reference/process_split_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to compute the gain in confident homogeneity of a split — process_split_config","text":"ids_left (integer) ids left child node. ids_right (integer) ids right child node. valid_set (data.frame) validation set. See get_valid_set() details. crit_node (number) confident homogeneity parent node. alpha (proportion) miscoverage rate. gamma (proportion) regularization parameter ensuring reduction impurity confident homogeneity sufficiently large. lambda (proportion) balance width deviation.","code":""},{"path":"https://holgstr.github.io/conftree/reference/process_split_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper to compute the gain in confident homogeneity of a split — process_split_config","text":"confident homogeneity split.","code":""},{"path":"https://holgstr.github.io/conftree/reference/process_split_config_categorical.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to compute the gain in confident homogeneity of a categorical split — process_split_config_categorical","title":"Helper to compute the gain in confident homogeneity of a categorical split — process_split_config_categorical","text":"Helper compute gain confident homogeneity categorical split","code":""},{"path":"https://holgstr.github.io/conftree/reference/process_split_config_categorical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to compute the gain in confident homogeneity of a categorical split — process_split_config_categorical","text":"","code":"process_split_config_categorical(   node_id,   var_name,   split_cand,   x_data,   valid_set,   crit_node,   alpha,   gamma,   lambda )"},{"path":"https://holgstr.github.io/conftree/reference/process_split_config_categorical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to compute the gain in confident homogeneity of a categorical split — process_split_config_categorical","text":"node_id (count) parent node identifier. var_name (string) name feature split. split_cand (character) split point, set categories representing left child node. x_data (data.frame) feature data matrix. valid_set (data.frame) validation set. See get_valid_set() details. crit_node (number) confident homogeneity parent node. alpha (proportion) miscoverage rate. gamma (proportion) regularization parameter ensuring reduction impurity confident homogeneity sufficiently large. lambda (proportion) balance width deviation.","code":""},{"path":"https://holgstr.github.io/conftree/reference/process_split_config_categorical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper to compute the gain in confident homogeneity of a categorical split — process_split_config_categorical","text":"List elements node_id, feature, feature_type, split_cand, ids_left_child, ids_right_child gain.","code":""},{"path":"https://holgstr.github.io/conftree/reference/process_split_config_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to compute the gain in confident homogeneity of a numeric split — process_split_config_numeric","title":"Helper to compute the gain in confident homogeneity of a numeric split — process_split_config_numeric","text":"Helper compute gain confident homogeneity numeric split","code":""},{"path":"https://holgstr.github.io/conftree/reference/process_split_config_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to compute the gain in confident homogeneity of a numeric split — process_split_config_numeric","text":"","code":"process_split_config_numeric(   node_id,   var_name,   split_cand,   x_data,   valid_set,   crit_node,   alpha,   gamma,   lambda )"},{"path":"https://holgstr.github.io/conftree/reference/process_split_config_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to compute the gain in confident homogeneity of a numeric split — process_split_config_numeric","text":"node_id (count) parent node identifier. var_name (string) name feature split. split_cand (number) value split point. x_data (data.frame) feature data matrix. valid_set (data.frame) validation set. See get_valid_set() details. crit_node (number) confident homogeneity parent node. alpha (proportion) miscoverage rate. gamma (proportion) regularization parameter ensuring reduction impurity confident homogeneity sufficiently large. lambda (proportion) balance width deviation.","code":""},{"path":"https://holgstr.github.io/conftree/reference/process_split_config_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper to compute the gain in confident homogeneity of a numeric split — process_split_config_numeric","text":"List elements node_id, feature, feature_type, split_cand, ids_left_child, ids_right_child gain.","code":""},{"path":"https://holgstr.github.io/conftree/reference/r2p.html","id":null,"dir":"Reference","previous_headings":"","what":"Finding Subgroups With Regression Trees Using Conformal Prediction — r2p","title":"Finding Subgroups With Regression Trees Using Conformal Prediction — r2p","text":"Finding Subgroups Regression Trees Using Conformal Prediction","code":""},{"path":"https://holgstr.github.io/conftree/reference/r2p.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finding Subgroups With Regression Trees Using Conformal Prediction — r2p","text":"","code":"r2p(   data,   target,   learner,   cv_folds = 2,   alpha = 0.05,   gamma = 0.01,   lambda = 0.5 )"},{"path":"https://holgstr.github.io/conftree/reference/r2p.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finding Subgroups With Regression Trees Using Conformal Prediction — r2p","text":"data (data.frame) data set model training uncertainty estimation. target (string) name target variable. learner (model_spec) learner training prediction model. See parsnip::model_spec() details. cv_folds (count) number CV+ folds. alpha (proportion) miscoverage rate. gamma (proportion) regularization parameter ensuring reduction impurity confident homogeneity sufficiently large. lambda (proportion) balance parameter, quantifying impact average interval length relative average absolute deviation (.e. interval size vs. within-group homogeneity)","code":""},{"path":"https://holgstr.github.io/conftree/reference/r2p.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finding Subgroups With Regression Trees Using Conformal Prediction — r2p","text":"tree.","code":""},{"path":"https://holgstr.github.io/conftree/reference/r2p.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Finding Subgroups With Regression Trees Using Conformal Prediction — r2p","text":"","code":"library(tidymodels) #> ── Attaching packages ────────────────────────────────────── tidymodels 1.1.1 ── #> ✔ broom        1.0.5      ✔ recipes      1.0.10 #> ✔ dials        1.2.1      ✔ rsample      1.2.0  #> ✔ dplyr        1.1.4      ✔ tibble       3.2.1  #> ✔ ggplot2      3.5.0      ✔ tidyr        1.3.1  #> ✔ infer        1.0.6      ✔ tune         1.1.2  #> ✔ modeldata    1.3.0      ✔ workflows    1.1.4  #> ✔ parsnip      1.2.0      ✔ workflowsets 1.0.1  #> ✔ purrr        1.0.2      ✔ yardstick    1.3.0  #> ── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ── #> ✖ purrr::discard() masks scales::discard() #> ✖ dplyr::filter()  masks stats::filter() #> ✖ dplyr::lag()     masks stats::lag() #> ✖ recipes::step()  masks stats::step() #> • Dig deeper into tidy modeling with R at https://www.tmwr.org library(ranger) data(bikes) set.seed(1234) randforest <- rand_forest(trees = 200, min_n = 5) %>%   set_mode(\"regression\") %>%   set_engine(\"ranger\") groups <- r2p(   data = bikes,   target = \"count\",   learner = randforest,   cv_folds = 2,   alpha = 0.05,   gamma = 0.2,   lambda = 0.5 ) groups$tree #> [1] root #> |   [2] weekday in Sun: * #> |   [3] weekday in Mon, Tue, Wed, Thu, Fri, Sat #> |   |   [4] weekday in Sat: * #> |   |   [5] weekday in Sun, Mon, Tue, Wed, Thu, Fri #> |   |   |   [6] temp <= 6.15: * #> |   |   |   [7] temp > 6.15 #> |   |   |   |   [8] month <= 2.5: * #> |   |   |   |   [9] month > 2.5: *"},{"path":"https://holgstr.github.io/conftree/reference/total_dev.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to compute the total absolute deviation of a candidate split — total_dev","title":"Helper to compute the total absolute deviation of a candidate split — total_dev","text":"Helper compute total absolute deviation candidate split","code":""},{"path":"https://holgstr.github.io/conftree/reference/total_dev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to compute the total absolute deviation of a candidate split — total_dev","text":"","code":"total_dev(valid_set, ids_left, ids_right, alpha)"},{"path":"https://holgstr.github.io/conftree/reference/total_dev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to compute the total absolute deviation of a candidate split — total_dev","text":"valid_set (data.frame) validation set. See get_valid_set() details. ids_left (integer) ids left child node. ids_right (integer) ids right child node. alpha (proportion) miscoverage rate.","code":""},{"path":"https://holgstr.github.io/conftree/reference/total_dev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper to compute the total absolute deviation of a candidate split — total_dev","text":"total absolute deviation.","code":""},{"path":"https://holgstr.github.io/conftree/reference/total_width.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper to compute the total conformal interval length of a candidate split — total_width","title":"Helper to compute the total conformal interval length of a candidate split — total_width","text":"Helper compute total conformal interval length candidate split","code":""},{"path":"https://holgstr.github.io/conftree/reference/total_width.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper to compute the total conformal interval length of a candidate split — total_width","text":"","code":"total_width(valid_set, ids_left, ids_right, alpha)"},{"path":"https://holgstr.github.io/conftree/reference/total_width.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper to compute the total conformal interval length of a candidate split — total_width","text":"valid_set (data.frame) validation set. See get_valid_set() details. ids_left (integer) ids left child node. ids_right (integer) ids right child node. alpha (proportion) miscoverage rate.","code":""},{"path":"https://holgstr.github.io/conftree/reference/total_width.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper to compute the total conformal interval length of a candidate split — total_width","text":"total conformal interval length.","code":""}]
